//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication.CustomerReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CustomerReference.ICustomerService")]
    public interface ICustomerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/SetProperties", ReplyAction="http://tempuri.org/ICustomerService/SetPropertiesResponse")]
        bool SetProperties(Model.Customer customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/SetProperties", ReplyAction="http://tempuri.org/ICustomerService/SetPropertiesResponse")]
        System.Threading.Tasks.Task<bool> SetPropertiesAsync(Model.Customer customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/Edit", ReplyAction="http://tempuri.org/ICustomerService/EditResponse")]
        bool Edit(Model.Customer customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/Edit", ReplyAction="http://tempuri.org/ICustomerService/EditResponse")]
        System.Threading.Tasks.Task<bool> EditAsync(Model.Customer customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/Delete", ReplyAction="http://tempuri.org/ICustomerService/DeleteResponse")]
        bool Delete(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/Delete", ReplyAction="http://tempuri.org/ICustomerService/DeleteResponse")]
        System.Threading.Tasks.Task<bool> DeleteAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/GetCustomer", ReplyAction="http://tempuri.org/ICustomerService/GetCustomerResponse")]
        Model.Customer GetCustomer(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/GetCustomer", ReplyAction="http://tempuri.org/ICustomerService/GetCustomerResponse")]
        System.Threading.Tasks.Task<Model.Customer> GetCustomerAsync(string id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICustomerServiceChannel : WebApplication.CustomerReference.ICustomerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CustomerServiceClient : System.ServiceModel.ClientBase<WebApplication.CustomerReference.ICustomerService>, WebApplication.CustomerReference.ICustomerService {
        
        public CustomerServiceClient() {
        }
        
        public CustomerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CustomerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool SetProperties(Model.Customer customer) {
            return base.Channel.SetProperties(customer);
        }
        
        public System.Threading.Tasks.Task<bool> SetPropertiesAsync(Model.Customer customer) {
            return base.Channel.SetPropertiesAsync(customer);
        }
        
        public bool Edit(Model.Customer customer) {
            return base.Channel.Edit(customer);
        }
        
        public System.Threading.Tasks.Task<bool> EditAsync(Model.Customer customer) {
            return base.Channel.EditAsync(customer);
        }
        
        public bool Delete(string id) {
            return base.Channel.Delete(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteAsync(string id) {
            return base.Channel.DeleteAsync(id);
        }
        
        public Model.Customer GetCustomer(string id) {
            return base.Channel.GetCustomer(id);
        }
        
        public System.Threading.Tasks.Task<Model.Customer> GetCustomerAsync(string id) {
            return base.Channel.GetCustomerAsync(id);
        }
    }
}
